@comment{

  Copyright 2019 Red Hat, Inc. and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}
package @{pmmlPackageName};

import org.kie.api.pmml.PMML4Result;
import org.kie.api.pmml.PMMLRequestData;

import org.kie.pmml.pmml_4_2.model.RegressionModelFunction;

@comment{
   The class that is generated from this MVEL template represents a
   single "regression" function. It will be used for the prediction of
   numeric values in a continuous domain. For more information see
   http://dmg.org/pmml/v4-2-1/Regression.html
}
public class @{className} implements RegressionModelFunction {
    @comment{
        In a standard regression model there is only a single regression
        table, so we don't need to worry about iterating over the values.
        The template compiler should validate and pass in the single table
        variables.
        
        TODO
        might be better to create a regression table class that can be
        reused here and in the classification regression.
    }
    public final double intercept = @{intercept};

    public @{className}() {
    }

    public PMML4Result predict(PMMLRequestData requestData) {
        PMML4Result result = new PMML4Result();
        return result;
    }
}
