@comment{

  Copyright 2019 Red Hat, Inc. and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}
package @{pmmlPackageName};

import org.kie.pmml.pmml_4_2.model.RegressionModelFunction;

@comment{
   The class that is generated from this MVEL template is meant to
   act as a wrapper to run regressions against the specified model.
   Regression models are not uniform in their algorithimic expression and
   as such this class will utilize the different algorithms depending on the
   specification in the source PMML definition.
}
public class @{className} {
    public final String functionName = @{functionName};
    public final String normalizationMethod = @{normalizationMethod};
    public final boolean isScorable = @{isScorable};

    @comment{
        The following variables are considerd optional in the PMML schema,
        not entirely sure if they are needed in this class.
    }
    public final String algorithmName = @{algorithmName};
    public final String modelName = @{modelName};

    @comment{
        The RegressionModelFunction is an interface to help with overloading
        the actual model implementation. As there are currently 2 different
        types of regression: regression and classification.
        This variable should contain the concrete object for the specific
        model function. Its class name should be generated by the code that
        compiles this template.
    }
    public final RegressionModelFunction = new @{modelFunctionClassName}();

    public @{className}() {
    }
}
